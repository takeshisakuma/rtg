{"version":3,"sources":["components/transitionList/transitionList.module.scss","components/transitionList/TransitionList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","transitionStyle","entering","transition","opacity","entered","exiting","exited","TransitionList","useState","inputting","setInputting","inputRef","useRef","lastId","setLastId","initialList","id","word","items","setItems","className","Style","wrapper","action","onSubmit","e","preventDefault","controller","controllerAddGroup","controllerInput","ref","type","onChange","target","value","button","onClick","prevId","current","disabled","cardGroup","TransitionGroup","map","Transition","timeout","state","cardShape","style","filter","item","cardWord","cardTransition","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,QAAU,gCAAgC,UAAY,kCAAkC,WAAa,mCAAmC,mBAAqB,2CAA2C,gBAAkB,wCAAwC,OAAS,+BAA+B,UAAY,kCAAkC,SAAW,iCAAiC,eAAiB,yC,yICIjaC,EAAkB,CAEtBC,SAAU,CACRC,WAAY,gBACZC,QAAQ,KAEVC,QAAS,CACPF,WAAY,gBACZC,QAAQ,KAEVE,QAAS,CACPH,WAAY,gBACZC,QAAQ,KAEVG,OAAQ,CACNJ,WAAY,gBACZC,QAAQ,MAkIGI,EA5HQ,WAAM,MAGIC,mBAAS,IAHb,mBAGpBC,EAHoB,KAGVC,EAHU,KAMrBC,EAAUC,mBANW,EASFJ,mBAAS,GATP,mBASpBK,EAToB,KASbC,EATa,KAYrBC,EAAY,CAChB,CAACC,GAAG,EAAEC,KAAK,SACX,CAACD,GAAG,EAAEC,KAAK,SACX,CAACD,GAAG,EAAEC,KAAK,eAfc,EAmBJT,mBAASO,GAnBL,mBAmBpBG,EAnBoB,KAmBdC,EAnBc,KAoD3B,OAEE,sBAAKC,UAAWC,IAAMC,QAAtB,UAEE,uBAAMC,OAAO,GACXC,SATW,SAACC,GAChBA,EAAEC,kBASEN,UAAWC,IAAMM,WAFnB,UAKE,sBAAKP,UAAWC,IAAMO,mBAAtB,UACE,uBACER,UAAWC,IAAMQ,gBACjBC,IAAKnB,EACLoB,KAAK,OACLC,SACE,SAACP,GAAD,OAAKf,EAAae,EAAEQ,OAAOC,UAI/B,wBACEd,UAAWC,IAAMc,OACjBC,QAnDI,WACT3B,GACDU,GACA,SAAAD,GAAK,4BACAA,GADA,CAEJ,CAACF,GAAGH,EACHI,KAAKR,QAKTK,GAAU,SAAAuB,GAAM,OAAEA,EAAO,KAGzB3B,EAAa,IACbC,EAAS2B,QAAQJ,MAAM,IAqCfK,UAAW9B,EAHb,6BAOF,wBACEW,UAAWC,IAAMc,OACjBC,QAvCM,WACZ1B,EAAa,IACbC,EAAS2B,QAAQJ,MAAM,GACvBf,EAASJ,IAkCL,mCAQF,qBAAKK,UAAWC,IAAMmB,UAAtB,SAEE,cAACC,EAAA,EAAD,UAEGvB,EAAMwB,KAAI,gBAAE1B,EAAF,EAAEA,GAAGC,EAAL,EAAKA,KAAL,OAET,cAAC0B,EAAA,EAAD,CAAqBC,QAAS,IAA9B,SACG,SAACC,GAAD,OACC,sBAAKzB,UAAWC,IAAMyB,UAAWC,MAAO/C,EAAgB6C,GAAxD,UACE,wBACEzB,UAAWC,IAAMc,OAChBC,QAAS,kBACRjB,GAAS,SAAAD,GAAK,OACZA,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAKjC,KAAOA,SAJvC,0BAWA,oBAAGI,UAAWC,IAAM6B,SAApB,cAAgCjC,KAChC,oBAAGG,UAAWC,IAAM8B,eAApB,cAAsCN,UAf3B7B,cCpGdoC,MAVf,WACE,OACE,sBAAKhC,UAAU,MAAf,qBAED,cAAC,EAAD,QCDYiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32121713.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"transitionList_wrapper__1BV5C\",\"cardGroup\":\"transitionList_cardGroup__2IrOz\",\"controller\":\"transitionList_controller__2_NW4\",\"controllerAddGroup\":\"transitionList_controllerAddGroup__z9JmX\",\"controllerInput\":\"transitionList_controllerInput__1gheG\",\"button\":\"transitionList_button__2qWQU\",\"cardShape\":\"transitionList_cardShape__31Ob5\",\"cardWord\":\"transitionList_cardWord__2rtoy\",\"cardTransition\":\"transitionList_cardTransition__29s1v\"};","import React, { useState,useRef } from \"react\";\r\nimport {TransitionGroup,Transition} from 'react-transition-group';\r\nimport Style from \"./transitionList.module.scss\";\r\n\r\n//トランジションのスタイル4種類を定義(使わないものは省略可能)\r\nconst transitionStyle = {\r\n\r\n  entering: {\r\n    transition: \"all 0.2s ease\",\r\n    opacity:\"0\"\r\n  },\r\n  entered: {\r\n    transition: \"all 0.2s ease\",\r\n    opacity:\"1\"\r\n  },\r\n  exiting: {\r\n    transition: \"all 0.2s ease\",\r\n    opacity:\"0\"\r\n  },\r\n  exited: {\r\n    transition: \"all 0.2s ease\",\r\n    opacity:\"0\"\r\n  },\r\n\r\n};\r\n\r\n//TransitionGroupコンポーネント\r\nconst TransitionList = () => {\r\n\r\n  //inputに入力中の文字\r\n  const [inputting,setInputting]=useState(\"\");\r\n\r\n  //input関連付け用のref\r\n  const inputRef =useRef();\r\n\r\n  //最後のID番号管理用\r\n  const [lastId,setLastId]=useState(3);\r\n\r\n  //初期アイテムリスト\r\n  const initialList=[\r\n    {id:0,word:\"React\"},\r\n    {id:1,word:\"Hooks\"},\r\n    {id:2,word:\"Transition\"},\r\n  ];\r\n\r\n  //アイテムリストに初期アイテムをセット\r\n  const [items,setItems]=useState(initialList);\r\n\r\n  //アイテムの追加処理\r\n  const adder = () => {\r\n    if(inputting){\r\n      setItems(\r\n      items=>[\r\n        ...items,\r\n       {id:lastId,\r\n        word:inputting}\r\n      ]\r\n    )};\r\n\r\n    //IDのインクリメント\r\n    setLastId(prevId=>prevId+1);\r\n\r\n    //inputのクリア\r\n    setInputting(\"\");\r\n    inputRef.current.value=\"\";\r\n  };\r\n\r\n  //リセット\r\n  const reseter=()=>{\r\n    setInputting(\"\");\r\n    inputRef.current.value=\"\";\r\n    setItems(initialList);\r\n  }\r\n\r\n  //form送信防止\r\n  const stopSubmit=(e)=>{\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n\r\n    <div className={Style.wrapper}>\r\n\r\n      <form action=\"\"\r\n        onSubmit={stopSubmit}\r\n        className={Style.controller}\r\n      >\r\n\r\n        <div className={Style.controllerAddGroup}>\r\n          <input\r\n            className={Style.controllerInput}\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            onChange={\r\n              (e)=>setInputting(e.target.value)\r\n            }\r\n          />\r\n\r\n          <button\r\n            className={Style.button}\r\n            onClick={adder}\r\n            disabled={!inputting ? true:false}\r\n          >追加</button>\r\n        </div>\r\n\r\n        <button\r\n          className={Style.button}\r\n          onClick={reseter}>\r\n          初期化\r\n        </button>\r\n\r\n      </form>\r\n\r\n      <div className={Style.cardGroup}>\r\n\r\n        <TransitionGroup>\r\n\r\n          {items.map(({id,word})=>(\r\n\r\n            <Transition key={id} timeout={200} >\r\n              {(state) =>\r\n                <div className={Style.cardShape} style={transitionStyle[state]} >\r\n                  <button\r\n                    className={Style.button}\r\n                     onClick={() =>\r\n                      setItems(items =>\r\n                        items.filter(item => item.id !== id)\r\n                      )\r\n                    }\r\n                  >\r\n                  削除\r\n                  </button>\r\n\r\n                  <p className={Style.cardWord}> {word}</p>\r\n                  <p className={Style.cardTransition}> {state}</p>\r\n             </div>}\r\n\r\n          </Transition>\r\n              )\r\n            )\r\n          }\r\n        </TransitionGroup>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default TransitionList;\r\n","import React from \"react\";\r\n\r\n//import SingleTransition from \"./components/singleTransition/SingleTransition\";\r\n//import OtherProps from \"./components/otherProps/OtherProps\";\r\n//import ChainTransition from \"./components/chainTransition/ChainTransition\";\r\n//import SingleCSSTransition from \"./components/singleCSSTransition/SingleCSSTransition\";\r\n//import TransitionSwitching from \"./components/transitionSwitching/TransitionSwiching\";\r\nimport TransitionList from \"./components/transitionList/TransitionList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n　  <TransitionList />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}